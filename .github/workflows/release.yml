name: Build and Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-and-release:
    if: startsWith(github.event.head_commit.message, 'release')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Extract version from Cargo.toml
        id: get_version
        run: |
          version=$(grep '^version =' Cargo.toml | head -n1 | sed 's/version = "\(.*\)"/\1/')
          echo "version=$version" >> $GITHUB_ENV

      - name: Build project
        run: cargo build --release

      - name: Check binary size
        f: matrix.os != 'windows-latest'
        run: ls -lh target/release/lintre

      - name: Package release artifact (Linux / macOS)
        if: matrix.os != 'windows-latest'
        run: |
          cd target/release
          zip lintre-${{ matrix.os == 'ubuntu-latest' && 'linux' || 'macos' }}.zip lintre

      - name: Package release artifact (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd target/release
          powershell Compress-Archive -Path lintre.exe -DestinationPath lintre-windows.zip

      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.version }}
          name: Release v${{ env.version }}
          files: |
            target/release/lintre-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
